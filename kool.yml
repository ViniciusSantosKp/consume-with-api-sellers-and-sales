# Here you can define shortcuts and aliases to common tasks (commands)
# you will run in your local environment or CI or deploy.
#  Use the scripts defined below with:
#    $ kool run <script>
# Learn more at: https://kool.dev/docs/getting-started/how-it-works#koolyml
scripts:
  composer: kool exec app composer
  artisan: kool exec app php artisan
  phpunit: kool exec app php ./bin/phpunit
  setup:
    - kool run before-start
    - kool start
    - kool run composer install
    - kool run artisan key:generate
  reset:
    - kool run composer install
    - kool run artisan migrate:fresh --seed
    - kool run npm install
  before-start:
    - kool docker kooldev/bash -c "cp .env.example .env"
    - kool run npm install
  # CLI access to MySQL
  mysql: kool exec -e MYSQL_PWD=$DB_PASSWORD database mysql -u $DB_USERNAME $DB_DATABASE
  # npm - helpers for JS handling
  npm: kool docker kooldev/node:16 npm
  npx: kool docker kooldev/node:16 npx

  qa:
    - kool run phpcpd
    - kool run phpmnd
    - kool run phan
    - kool run php-cs-fixer-check
    - kool run phpmd
    - kool run php-security-checker
    - kool run artisan test

  phpqa: kool docker jakzal/phpqa:1.79-php8.1
  phan: kool run phpqa phan --color -p -l app -iy 5
  phpcpd: kool run phpqa phpcpd --fuzzy app
  phpmd: kool run phpqa phpmd app text phpmd/cleancode.xml,phpmd/codesize.xml,phpmd/naming.xml,unusedcode # phpmd/controversial.xml,phpmd/design.xml with erros
  phpmnd: kool run phpqa phpmnd app --ignore-funcs=round,sleep,abort,strpad,number_format --exclude=tests --progress --extensions=default_parameter,-return,argument